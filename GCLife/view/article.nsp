<% include('layout/top.nsp'); %>

<%
	var id = self.subURI.substring(self.subURI.lastIndexOf('/'));
	var data;
	var commentDataSet;
	
	GCLife.ArticleModel.get(id, function(savedData) {
		data = savedData;
		
		PARALLEL([
		function(done) {
			GCLife.UserModel.get(data.writerId, function(userData) {
				data.writerData = userData;
				done();
			});
		},
		
		function(done) {
			if (data.categoryId === undefined) {
	    		done();
	    	} else {
	    		GCLife.CategoryModel.get(data.categoryId, {
	    			notExists : done,
	    			success : function(categoryData) {
	    				data.categoryData = categoryData;
	    				done();
	    			}
	    		});
	    	}
		},
		
		function(done) {
			GCLife.CommentModel.find({
				filter : {
					articleId : data.id
				},
				sort : {
					createTime : 1
				}
			}, function(_commentDataSet) {
				commentDataSet = _commentDataSet;
				
				PARALLEL(commentDataSet, [
			    function(commentData, done) {
			        GCLife.UserModel.get(commentData.writerId, function(userData) {
			        	commentData.writerData = userData;
			        	done();
			        });
			    },
			    resume])
			});
		},
		
		resume]);
	});
	
	pause();
%>

<div class="article">
	
	<h3>{{data.categoryData === undefined ? '' : '[' + data.categoryData.category + '] '}}{{data.title}}</h3>
	
	<p class="content">
		{{data.content}}
	</p>
	
	<? self.signedUserData !== undefined && data.writerId === self.signedUserData.id >
	    <a class="pure-button pure-button-primary" href="/article/update?id={{data.id}}">글 수정</a>
	    <a class="pure-button" href="/article/remove?id={{data.id}}">글 삭제</a>
	</?>
	
	<div id="comment-list">
		<~ commentDataSet -> commentData >
			<div class="comment">
				<span class="nickname">{{commentData.writerData.nickname}}</span>
				<span class="time"><%
					var cal = CALENDAR(commentData.createTime);
					print(cal.getYear() + '.' + cal.getMonth(true) + '.' + cal.getDate(true) + '. ' + cal.getHour(true) + ':' + cal.getMinute(true));
				%></span>
				<p>
					{{commentData.content}}
				</p>
			</div>
		</~>
	</div>
</div>
<% include('layout/bottom-script.nsp'); %>
<script>
	READY(function() {
		
		OVERRIDE(DOM, function(origin) {
			global.DOM = CLASS({
				preset : function() {
					return origin;
				},
				init : function(inner, self, params) {
					if (params.cls !== undefined && self.getEl() !== undefined) {
						self.getEl().setAttribute('class', params.cls);
					}
				}
			});
		});
		
		var commentList = DOM({
			el : document.getElementById('comment-list')
		});
		
		commentList.after(UUI.VALID_FORM({
			errorMsgs : {
				content : {
					notEmpty : '댓글을 입력해주세요. 잇힝!',
					size : function(validParams) {
						return '댓글을 ' + validParams.max + '자 이내로 입력해주세요. 잇힝!';
					}
				}
			},
			errorMsgStyle : {
				backgroundColor: '#FFBABA',
				color : '#D8000C',
				padding : 10,
				margin : 0
			},
			style : {
				border : '1px solid #ccc'
			},
			c : [UUI.FULL_TEXTAREA({
				style : {
					height : 50
				},
				name : 'content'
			}), UUI.FULL_SUBMIT({
				value : '댓글 쓰기'
			})],
			on : {
				submit : function(e, form) {
					
					var data = form.getData();
					
					data.articleId = '{{data.id}}';
					data.writerId = '{{self.signedUserData.id}}';
					
					form.setData({});
					
					GCLife.CommentModel.create(data, {
						notValid : function(validErrors) {
							form.showErrors(validErrors);
							form.setData(data);
						}
					});
				}
			}
		}));
		
		GCLife.CommentModel.onNew(function(commentData) {
			
			GCLife.UserModel.get(commentData.writerId, function(writerData) {
				
				commentList.append(DIV({
					cls : 'comment',
					c : [SPAN({
						cls : 'nickname',
						c : writerData.nickname
					}), SPAN({
						cls : 'time',
						c : RUN(function() {
							var cal = CALENDAR(commentData.createTime);
							return cal.getYear() + '.' + cal.getMonth(true) + '.' + cal.getDate(true) + '. ' + cal.getHour(true) + ':' + cal.getMinute(true);
						})
					}), P({
						c : commentData.content
					})]
				}));
			});
		});
	});
</script>
<% include('layout/bottom-html.nsp'); %>