<%
	var subURI = self.subURI;
	var articleId = subURI.substring(subURI.lastIndexOf('/') + 1);
	subURI = subURI.substring(0, subURI.lastIndexOf('/'));
	
	var boardId = subURI.substring(subURI.lastIndexOf('/') + 1);
	subURI = subURI.substring(0, subURI.lastIndexOf('/'));
	
	var categoryId = self.params.categoryId;
	var query = self.params.query;
	
	if (boardId === '') {
		boardId = articleId;
		articleId = undefined;
	}
	
	self.boardId = boardId;
	
	var boardData;
	
	var page = self.params.page;
	if (page === undefined) {
		page = 1;
	} else {
		page = parseInt(page);
	}
	
	var perPageArticleCount = 20;
	var totalArticleCount;
	var articleDataSet;
	
	var filter;
	
	NEXT([
	function(next) {
		if (boardId === '' || boardId === 'all') {
			next();
		} else {
			Life.BoardModel.get(boardId, function(savedData) {
				boardData = savedData;
				self.title = boardData.name;
				next();
			});
		}
	},
	
	function(next) {
		return function() {
			
			filter = boardData === undefined ? {} : {
				boardId : boardData.id,
				categoryId : categoryId
			};
			
			if (query !== undefined) {
				filter = {
					$or : [COMBINE([filter, {
						title : new RegExp(query)
					}]), COMBINE([filter, {
						content : new RegExp(query)
					}])]
				};
			}
			
			if (articleId === undefined) {
				next();
			} else {
				Life.ArticleModel.get(articleId, function(savedData) {
					self.title = savedData.title;
					next();
				});
			}
		};
	},
	
	function(next) {
		return function() {
			
			Life.ArticleModel.count({
				filter : filter
			}, function(count) {
				totalArticleCount = count;
				next();
			});
		};
	},
	
	function(next) {
		return function() {
			
			if (boardData === undefined) {
				next();
			}
			
			else {
				Life.CategoryModel.find({
					filter : {
						boardId : boardData.id
					},
					sort : {
						category : 1
					}
				}, function(categoryDataSet) {
					self.categoryDataSet = categoryDataSet;
					next();
				});
			}
		};
	},
	
	function() {
		return function() {
			
			Life.ArticleModel.find({
				filter : filter,
				start : (page - 1) * perPageArticleCount,
				count : perPageArticleCount
			}, function(_articleDataSet) {
				articleDataSet = _articleDataSet;
				
				PARALLEL(articleDataSet, [
			    function(articleData, done) {
			    	
			    	PARALLEL([
				    function(done) {
				    	Life.UserModel.get(articleData.writerId, function(userData) {
			        		articleData.writerData = userData;
			        		done();
			      		});
				    },
				    function(done) {
				    	if (articleData.categoryId === undefined) {
			        		done();
			        	} else {
			        		Life.CategoryModel.get(articleData.categoryId, {
			        			notExists : done,
			        			success : function(categoryData) {
			        				articleData.categoryData = categoryData;
			        				done();
			        			}
			        		});
			        	}
				    },
				    function(done) {
				    	
				    	if (boardData !== undefined) {
							done();
						}
						
						else {
					    	Life.BoardModel.get(articleData.boardId, {
			        			notExists : done,
			        			success : function(boardData) {
			        				articleData.boardData = boardData;
			        				done();
			        			}
			        		});
			        	}
				    },
				    done]);
			    },
			    resume]);
			});
		};
	}]);
	
	pause();
%>
<% include('layout/top.nsp'); %>

<? self.params.list !== 'true' >
	<? articleId === undefined >
		<div id="article" class="{{self.subURI === '' ? '' : 'pc'}}">
			<? boardData === undefined >
				<header>
					<h1 class="logo">
						<img src="/R/logo.png">
					</h1>
				</header>
				<article>
					<p class="description">
						{{CONFIG.description}}
					</p>
					<p>전체 총 <span class="count">{{totalArticleCount}}</span>개의 글이 있습니다.</p>
					<? page <= 1 >
						<p>
							총 <span class="count"><%
								Life.UserModel.count(function(count) {
									print(count);
									resume();
								});
								pause();
							%></span>명의 유저가 있습니다.
						</p>
					</?>
				</article>
				<script>
					Life.STORE('menuScrollStore').remove('scrollTop');
				</script>
			</?>
			<? else >
				<header>
					<h1>{{boardData.name}} <span class="count">({{totalArticleCount}})</span></h1>
				</header>
				<? self.categoryDataSet !== undefined >
					<div class="category">
						<h5>카테고리</h5>
						<ul>
							<~ self.categoryDataSet -> categoryData >
								<li><a href="/board/{{categoryData.boardId}}?categoryId={{categoryData.id}}{{self.params.list === 'true' ? '&list=true' : ''}}">{{categoryData.category}} <span class="count">({{categoryData.articleCount}})</span></a></li>
							</~>
							<div class="clear"></div>
						</ul>
					</div>
				</?>
				<article>
					{{boardData.html}}
				</article>
			</?>
		</div>
	</?>
	<? else >
		<div id="article">
			<% include('article.nsp'); %>
		</div>
	</?>
</?>
<div id="list" {{self.params.list === 'true' ? 'class="force-list"' : self.subURI !== '' && articleId === undefined ? '' : 'class="pc"'}}>
	<div class="page-info">
		<h3 class="left">{{boardData === undefined ? '전체글보기' : boardData.name}}{{categoryId === undefined ? '' : ' - ' + RUN(function() {
			
			var category = '';
			EACH(self.categoryDataSet, function(categoryData) {
				if (categoryData.id === categoryId) {
					category = categoryData.category;
				}
			});
			return category;
			
		})}} <span class="count">({{totalArticleCount}})</span></h3>
		<div class="right">
			<span class="left">
				{{page}} page / {{Math.ceil(totalArticleCount / perPageArticleCount)}}
			</span>
			<script>
				function openSearchBox() {
					
					Yogurt.Prompt('검색어를 입력해주세요.', function(value) {
						location.href = '/board/{{boardData === undefined ? 'all' : boardData.id}}?query=' + value + '{{self.params.list === 'true' ? '&list=true' : ''}}';
					});
				}
			</script>
			<a onclick="openSearchBox();"><i class="left axi axi-search"></i></a>
			<div class="clear"></div>
		</div>
		<div class="clear"></div>
	</div>
	<ul id="article-list">
		<~ articleDataSet -> articleData >
			<li>
				<a class="item" href="/board/{{boardData === undefined ? 'all' : boardData.id}}/{{articleData.id}}?{{categoryId === undefined ? '' : 'categoryId=' + categoryId + '&'}}{{query === undefined ? '' : 'query=' + query + '&'}}page={{page}}">
					<table>
						<tr>
							<td rowspan="4" class="icon">
								<a href="/user/{{articleData.writerData.id}}">
									<? articleData.writerData.iconFileId === undefined >
										<img src="/R/icon-default.png">
									</?>
									<? else >
										<img src="/__RF/Life/ICON/{{articleData.writerData.iconFileId}}">
									</?>
								</a>
							</td>
							<td class="nickname">
								<a href="/user/{{articleData.writerData.id}}" class="left">{{articleData.writerData.nickname}}</a>
								<span class="board">{{boardData !== undefined ? '' : articleData.boardData.name}}</span>
								<div class="clear"></div>
							</td>
						</tr>
						<tr>
							<td class="title">
								<a href="/board/{{boardData === undefined ? 'all' : boardData.id}}/{{articleData.id}}?{{categoryId === undefined ? '' : 'categoryId=' + categoryId + '&'}}{{query === undefined ? '' : 'query=' + query + '&'}}page={{page}}">
									{{articleData.categoryData === undefined ? '' : '[' + articleData.categoryData.category + '] '}}{{articleData.title}} <span id="article-{{articleData.id}}-comment-count" class="count">({{articleData.commentCount}})</span>
								</a>
							</td>
						</tr>
						<tr>
							<td class="content">
								<? articleData.content === undefined >
									글 내용이 없습니다.
								</?>
								<? else >
									<%
										var content = articleData
											.content
											.replace(/<.*>/g, '')
											.replace(/\[.*\)/g, '')
											.replace(/\n/g, '')
											.replace(/#/g, '');
									%>
									{{content.length > 75 ? content.substring(0, 75) + '...' : content}}
								</?>
							</td>
						</tr>
						<tr>
							<td class="more">
								<%
									var cal = CALENDAR(articleData.createTime);
									print(cal.getYear() + '.' + cal.getMonth(true) + '.' + cal.getDate(true));
								%> | 조회 {{articleData.viewCount}} | 따봉 {{articleData.likeCount}}
							</td>
						</tr>
					</table>
				</a>
			</li>
		</~>
	</ul>
	<ul class="pagination">
		<%
			var startPage = page - 4;
			var endPage = page + 4;
			
			if (startPage < 1) {
				startPage = 1;
				endPage = 10;
			}
			
			if (endPage > Math.ceil(totalArticleCount / perPageArticleCount)) {
				endPage = Math.ceil(totalArticleCount / perPageArticleCount);
			}
			
			if (endPage === 0) {
				endPage = 1;
			}
		%>
		<~ endPage - startPage + 1 -> i >
			<li><a href="/board/{{boardData === undefined ? 'all' : boardData.id}}?{{categoryId === undefined ? '' : 'categoryId=' + categoryId + '&'}}{{query === undefined ? '' : 'query=' + query + '&'}}page={{i + startPage}}{{self.params.list === 'true' ? '&list=true' : ''}}"{{page === i + startPage ? ' class="now"' : ''}} onclick="Life.STORE('listScrollStore').remove('scrollTop');">{{i + startPage}}</a></li>
		</~>
		<div class="clear"></div>
	</ul>
</div>

<script>
	var listDom = DOM({
		el : document.getElementById('list')
	});
	
	var listScrollStore = Life.STORE('listScrollStore');
	
	if (listScrollStore.get('scrollTop') !== undefined) {
		listDom.scrollTo({
			top : listScrollStore.get('scrollTop')
		});
	}
	
	listDom.on('scroll', function() {
		listScrollStore.save({
			name : 'scrollTop',
			value : listDom.getScrollTop()
		});
	});
</script>

<? page === 1 >
<script>
	READY(function() {
		
		var articleListDom = DOM({
			el : document.getElementById('article-list')
		});
		
		Life.ArticleModel.onNew({
			boardId : {{boardData === undefined ? 'undefined' : '\'' + boardData.id + '\''}},
			categoryId : {{categoryId === undefined ? 'undefined' : '\'' + categoryId + '\''}}
		}, function(articleData) {
			
			var content = articleData.content === undefined ? '글 내용이 없습니다.' : articleData
				.content
				.replace(/<.*>/g, '')
				.replace(/\[.*\)/g, '')
				.replace(/\n/g, '')
				.replace(/#/g, '');
			
			Life.UserModel.get(articleData.writerId, function(writerData) {
				
				var article;
				
				articleListDom.prepend(article = LI({
					c : A({
						cls : 'new item',
						href : '/board/{{boardData === undefined ? 'all' : boardData.id}}/' + articleData.id + '?{{categoryId === undefined ? '' : 'categoryId=' + categoryId + '&'}}{{query === undefined ? '' : 'query=' + query + '&'}}page={{page}}{{self.params.list === 'true' ? '&list=true' : ''}}',
						c : TABLE({
							c : [TR({
								c : [TD({
									rowspan : 4,
									cls : 'icon',
									c : A({
										href : '/user/' + writerData.id,
										c : IMG({
											src : writerData.iconFileId === undefined ? '/R/icon-default.png' : '/__RF/Life/ICON/' + writerData.iconFileId
										})
									})
								}), TD({
									cls : 'nickname',
									c : A({
										href : '/user/' + writerData.id,
										c : writerData.nickname
									})
								})]
							}), TR({
								c : TD({
									cls : 'title',
									c : A({
										href : '/board/{{boardData === undefined ? 'all' : boardData.id}}/' + articleData.id + '?{{categoryId === undefined ? '' : 'categoryId=' + categoryId + '&'}}{{query === undefined ? '' : 'query=' + query + '&'}}page={{page}}',
										c : [articleData.title, ' ', SPAN({
											id : 'article-' + articleData.id + '-comment-count',
											cls : 'count',
											c : '(' + articleData.commentCount + ')'
										})]
									})
								})
							}), TR({
								c : TD({
									cls : 'content',
									c : content.length > 75 ? content.substring(0, 75) + '...' : content
								})
							}), TR({
								c : TD({
									cls : 'more',
									c : RUN(function() {
										
										var cal = CALENDAR(articleData.createTime);
										
										return cal.getYear() + '.' + cal.getMonth(true) + '.' + cal.getDate(true);
										
									}) + ' | 조회 ' + articleData.viewCount + ' | 따봉 ' + articleData.likeCount
								})
							})]
						})
					})
				}));
				
				UANI.SHOW_SLIDE_DOWN({
					node : article
				});
			});
		});
	});
</script>
</?>

<? self.params.list !== 'true' >
<script>
	var listDom = DOM({
		el : document.getElementById('list')
	});
	
	var articleDom = DOM({
		el : document.getElementById('article')
	});
	
	var isResizing = false;
	
	var resizeBarStore = Life.STORE('resizeBarStore');
	
	var bar;
	
	var resize = function(left) {
		
		if (WIN_WIDTH() >= 980 && left > 300) {
		
			listDom.addStyle({
				width : left - 150
			});
			articleDom.addStyle({
				marginLeft : left - 150
			});
			
			if (bar !== undefined) {
				bar.addStyle({
					left : left
				});
			}
			
			resizeBarStore.save({
				name : 'left',
				value : left
			});
		}
	};
	
	if (resizeBarStore.get('left') !== undefined) {
		resize(resizeBarStore.get('left'));
	}
	
	READY(function() {
		
		bar = DIV({
			style : {
				position : 'fixed',
				left : listDom.getLeft() + listDom.getWidth() - 2,
				top : 0,
				width : 5,
				height : '100%',
				cursor : 'e-resize'
			},
			on : {
				touchstart : function(e) {
					isResizing = true;
					e.stop();
				}
			}
		}).appendTo(BODY);
		
		if (resizeBarStore.get('left') !== undefined) {
			bar.addStyle({
				left : resizeBarStore.get('left')
			});
		}
		
		EVENT('touchmove', function(e) {
			if (isResizing === true) {
				resize(e.getLeft());
			}
		});
		
		EVENT('touchend', function() {
			isResizing = false;
		});
	});
</script>
</?>

<% include('layout/bottom.nsp'); %>