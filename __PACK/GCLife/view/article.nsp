<%
	var id = self.subURI.substring(self.subURI.lastIndexOf('/'));
	var data;
	var commentDataSet;
	
	GCLife.ArticleModel.update({
		id : id,
		lastViewTime : new Date(),
		$inc : {
			viewCount : 1
		}
	}, function(savedData) {
		data = savedData;
		
		self.title = data.title;
		
		PARALLEL([
		function(done) {
			GCLife.BoardModel.get(data.boardId, function(boardData) {
				data.boardData = boardData;
				done();
			});
		},
		
		function(done) {
			GCLife.UserModel.get(data.writerId, function(userData) {
				data.writerData = userData;
				done();
			});
		},
		
		function(done) {
			if (data.categoryId === undefined) {
	    		done();
	    	} else {
	    		GCLife.CategoryModel.get(data.categoryId, {
	    			notExists : done,
	    			success : function(categoryData) {
	    				data.categoryData = categoryData;
	    				done();
	    			}
	    		});
	    	}
		},
		
		function(done) {
			GCLife.CommentModel.find({
				filter : {
					articleId : data.id
				},
				sort : {
					createTime : 1
				}
			}, function(_commentDataSet) {
				commentDataSet = _commentDataSet;
				
				PARALLEL(commentDataSet, [
			    function(commentData, done) {
			        GCLife.UserModel.get(commentData.writerId, function(userData) {
			        	commentData.writerData = userData;
			        	done();
			        });
			    },
			    resume])
			});
		},
		
		resume]);
	});
	
	pause();
%>
<% include('layout/top.nsp'); %>
<div class="article">
	
	<h3>{{data.categoryData === undefined ? '' : '[' + data.categoryData.category + '] '}}{{data.title}}</h3>
	
	<div class="other">
		<p class="left">
			작성자: <? data.writerData.iconFileId === undefined >
			<img class="icon" src="/R/icon-default.png">
			</?>
			<? else >
			<img class="icon" src="/__RF/GCLife/ICON/{{data.writerData.iconFileId}}">
			</?> {{data.writerData.nickname}}
		</p>
		<p class="time">작성일: <%
			var cal = CALENDAR(data.createTime);
			print(cal.getYear() + '.' + cal.getMonth(true) + '.' + cal.getDate(true) + '. ' + cal.getHour(true) + ':' + cal.getMinute(true));
		%></p>
		<p class="view-count">조회수: {{data.viewCount}}</p>
	</div>
	
	<div class="clear"></div>
	
	<div class="content markdown-body">
		{{data.html === undefined ? '제곧내 (제곧내는 제목은 곧 내용입니다의 약자입니다. ㅎㅎ)' : data.html}}
	</div>
	
	<div id="like-menu" class="left">
	</div>
	
	<div class="right">
		<? self.signedUserData !== undefined && data.writerId === self.signedUserData.id >
		    <a class="pure-button pure-button-primary" href="/article/update?id={{data.id}}">글 수정</a>
		    <a class="pure-button" href="/article/remove?id={{data.id}}">글 삭제</a>
		</?>
	</div>
	
	<div class="clear"></div>
</div>
<div id="comment-list">
	<~ commentDataSet -> commentData >
		<div id="comment-{{commentData.id}}" class="comment">
			<span class="nickname"><? commentData.writerData.iconFileId === undefined >
			<img class="icon" src="/R/icon-default.png">
			</?>
			<? else >
			<img class="icon" src="/__RF/GCLife/ICON/{{commentData.writerData.iconFileId}}">
			</?> {{commentData.writerData.nickname}}</span>
			<span class="time"><%
				var cal = CALENDAR(commentData.createTime);
				print(cal.getYear() + '.' + cal.getMonth(true) + '.' + cal.getDate(true) + '. ' + cal.getHour(true) + ':' + cal.getMinute(true));
			%></span>
			<? self.signedUserData !== undefined && commentData.writerId === self.signedUserData.id >
				<a class="right" href="javascript:removeComment('{{commentData.id}}');">댓글 삭제</a>
			</?>
			<p>
				{{commentData.content.replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\n/g, '<br>')}}
			</p>
		</div>
	</~>
</div>
<% include('layout/bottom-script.nsp'); %>
<? self.signedUserData !== undefined >
	<script>
		READY(function() {
			
			global.removeComment = function(commentId) {
				if (confirm('레알 삭제합니까?') === true) {
					GCLife.CommentModel.remove(commentId);
				}
			};
			
			var commentList = DOM({
				el : document.getElementById('comment-list')
			});
			
			commentList.after(UUI.VALID_FORM({
				errorMsgs : {
					content : {
						notEmpty : '댓글을 입력해주세요. 잇힝!',
						size : function(validParams) {
							return '댓글을 ' + validParams.max + '자 이내로 입력해주세요. 잇힝!';
						}
					}
				},
				errorMsgStyle : {
					backgroundColor: '#FFBABA',
					color : '#D8000C',
					padding : 10,
					margin : 0
				},
				style : {
					borderTop : '1px solid #ccc',
					borderBottom : '1px solid #ccc',
					onDisplayResize : function(width) {
						if (width < 920) {
							return {
								borderLeft : 'none',
								borderRight : 'none'
							};
						} else {
							return {
								borderLeft : '1px solid #ccc',
								borderRight : '1px solid #ccc'
							};
						}
					}
				},
				c : [UUI.FULL_TEXTAREA({
					style : {
						height : 50
					},
					name : 'content'
				}), UUI.FULL_SUBMIT({
					style : {
						background: '#0078e7',
						color: '#fff',
						fontWeight: 'bold'
					},
					value : '댓글 쓰기'
				})],
				on : {
					submit : function(e, form) {
						
						var data = form.getData();
						
						data.articleId = '{{data.id}}';
						data.writerId = '{{self.signedUserData.id}}';
						
						form.setData({});
						
						GCLife.CommentModel.create(data, {
							notValid : function(validErrors) {
								form.showErrors(validErrors);
								form.setData(data);
							}
						});
					}
				}
			}));
			
			GCLife.CommentModel.onNew({
				articleId : '{{data.id}}'
			}, function(commentData) {
				
				GCLife.UserModel.get(commentData.writerId, function(writerData) {
					
					commentList.append(DIV({
						id : 'comment-' + commentData.id,
						cls : 'comment',
						c : [IMG({
							cls : 'icon',
							src : writerData.iconFileId === undefined ? '/R/icon-default.png' : '/__RF/GCLife/ICON/' + writerData.iconFileId
						}), ' ', SPAN({
							cls : 'nickname',
							c : writerData.nickname
						}), ' ', SPAN({
							cls : 'time',
							c : RUN(function() {
								var cal = CALENDAR(commentData.createTime);
								return cal.getYear() + '.' + cal.getMonth(true) + '.' + cal.getDate(true) + '. ' + cal.getHour(true) + ':' + cal.getMinute(true);
							})
						}), (writerData.id === '{{self.signedUserData.id}}' ? A({
							cls : 'right',
							c : '댓글 삭제',
							on : {
								tap : function() {
									removeComment(commentData.id);
								}
							}
						}) : ''), P({
							c : commentData.content
						})]
					}));
				});
			});
			
			GCLife.CommentModel.onRemove({
				articleId : '{{data.id}}'
			}, function(originData) {
				var commentEl = document.getElementById('comment-' + originData.id);
				if (commentEl !== TO_DELETE && commentEl.parentNode !== TO_DELETE) {
					commentEl.parentNode.removeChild(commentEl);
				}
			});
			
			var likeMenu = DOM({
				el : document.getElementById('like-menu')
			});
			
			var likeCount = {{data.likeCount}};
			
			var generateLikeButton = RAR(function() {
				
				likeMenu.empty();
				likeMenu.append(A({
					style : {
						textDecoration : 'none'
					},
					cls : 'pure-button pure-button-primary',
					c : likeCount + ' 따봉',
					on : {
						tap : function() {
							GCLife.ArticleLikeModel.create({
								articleId : '{{data.id}}',
								userId : '{{self.signedUserData.id}}'
							}, {
								notValid : function(validErrors) {
									if (validErrors.articleId.type === 'existed') {
										alert('이미 1따봉 날렸습니다.');
									}
								}
							});
						}
					}
				}));
			});
			
			GCLife.ArticleLikeModel.onNew({
				articleId : '{{data.id}}'
			}, function() {
				likeCount += 1;
				generateLikeButton();
			});
		});
	</script>
</?>
<% include('layout/bottom-html.nsp'); %>