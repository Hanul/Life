<% include('../layout/top.nsp'); %>

<? self.checkIsSigned() === true >
	<div id="simple">
		<h1>내 정보 수정</h1>
		<%
			var data = self.params;
			var validErrors;
			
			if (self.method === 'POST') {
				
				data.id = self.signedUserData.id;
				
				delete data.email;
				
				if (data.password === '') {
					delete data.password;
				}
				
				Life.UserModel.update(data, {
					notValid : function(_validErrors) {
						validErrors = _validErrors;
						resume();
					},
					success : function(userData) {
						self.signedUserData = userData;
						redirect('/user/' + userData.id);
					}
				});
				
				pause();
			}
		%>
		
		<h3>아이콘 변경 (최적 크기 24 * 24)</h3>
		<div id="change-icon">
		</div>
		
		<form method="POST">
			
			<? validErrors !== undefined >
				<ul class="error">
					<~ validErrors -> name : validError >
						<? name === 'nickname' >
							<? validError.type === 'existed' >
								<li>이미 존재하는 닉네임입니다.</li>
							</?>
						</?>
					</~>
				</ul>
			</?>
			
			<label>이메일</label>
			<p class="email">{{self.signedUserData.email}}<br><a href="/account/update-email.nsp">이메일 변경</a></p>
			
			<label for="username">로그인 아이디</label>
			<input name="username" value="{{self.signedUserData.username}}" placeholder="로그인 아이디">
			
			<label>닉네임</label>
			<input name="nickname" value="{{self.signedUserData.nickname}}" placeholder="닉네임">
			
			<label>비밀번호</label>
			<input type="password" name="password" placeholder="비밀번호">
			
			<label>내 소개</label>
			<textarea name="intoduce" placeholder="나는 이런 사람이다!">{{self.signedUserData.intoduce}}</textarea>
			
			<input type="submit" value="내 정보 수정">
		</form>
	</div>
</?>
<? else >
	<%
		redirect('/login');
	%>
</?>

<? self.signedUserData !== undefined >
	<script>
		READY(function() {
			
			var changeIcon = DOM({
				el : document.getElementById('change-icon')
			});
			
			changeIcon.addStyle({
				marginTop : 10
			});
			
			var iconPreviewStyle = {
				border : '1px solid #999'
			};
			
			<? self.signedUserData.iconFileId === undefined >
			var iconPreview = IMG({
				style : iconPreviewStyle,
				src : Life.R('icon-default.png')
			});
			</?>
			<? else >
			var iconPreview = IMG({
				style : iconPreviewStyle,
				src : Life.RF('ICON/{{self.signedUserData.iconFileId}}')
			});
			</?>
			
			changeIcon.prepend(iconPreview);
			
			changeIcon.append(UUI.FULL_UPLOAD_FORM({
				style : {
					border : '1px solid #ccc',
					marginTop : 10,
					marginBottom : 20
				},
				formStyle : {
					margin : 0,
					padding : 0
				},
				inputStyle : {
					margin : 0
				},
				box : Life
			}, {
				overSizeFile : function(maxUploadFileMB) {
					Yogurt.Alert('파일 용량은 ' + maxUploadFileMB + 'mb를 넘을 수 없습니다.');
				},
				success : function(fileData, form) {
					
					if (
					fileData.type === 'image/png' ||
					fileData.type === 'image/jpeg' ||
					fileData.type === 'image/gif') {
					
						Life.UserModel.update({
							id : '{{self.signedUserData.id}}',
							iconFileId : fileData.id
						}, function(savedData) {
							
							iconPreview.remove();
							
							iconPreview = IMG({
								style : iconPreviewStyle,
								src : Life.RF('ICON/' + savedData.iconFileId)
							});
							
							changeIcon.prepend(iconPreview);
						});
					}
					
					else {
						Yogurt.Alert('이미지 파일만 업로드 가능합니다.');
					}
				}
			}));
		});
	</script>
</?>
<% include('../layout/bottom.nsp'); %>