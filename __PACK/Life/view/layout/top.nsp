<%
	var sessionKey = cookie('session-key');
	if (sessionKey !== undefined) {
		Life.SessionKeyModel.get(sessionKey, {
			notExists : function() {
				resume();
			},
			success : function(sessionKeyData) {
				Life.UserModel.get(sessionKeyData.userId, {
					notExists : function() {
						resume();
					},
					success : function(userData) {
						self.signedUserData = userData;
						resume();
					}
				});
			}
		});
		pause();
	}
	
	self.checkIsSigned = function() {
		return self.signedUserData !== undefined && CHECK_IS_IN({
			array : self.signedUserData.roles,
			value : Life.ROLE.USER
		}) === true;
	};
	
	self.checkIsAdmin = function() {
		return self.signedUserData !== undefined && CHECK_IS_IN({
			array : self.signedUserData.roles,
			value : Life.ROLE.ADMIN
		}) === true;
	};
	
	self.totalArticleCount = 0;
	
	Life.BoardModel.find({
		sort : {
			index : 1
		},
		isToCache : true
	}, function(_boardDataSet) {
			
		self.boardDataSet = _boardDataSet;
		
		EACH(_boardDataSet, function(boardData) {
			self.totalArticleCount += boardData.articleCount;
		});
		
		resume();
	});
	pause();
%>
<!DOCTYPE html>
<html>
	<head>
		<meta charset="utf-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0, user-scalable=no">
		
		<link rel="shortcut icon" href="/R/favicon.ico" />
		<link rel="apple-touch-icon-precomposed" href="/R/apple-touch-icon.png" />
		
		<title>{{self.title === undefined ? '' : self.title + ' - '}}{{CONFIG.title}}</title>
		
		<link rel="stylesheet" href="//fonts.googleapis.com/earlyaccess/notosanskr.css">
		<link rel="stylesheet" href="/R/BASE_STYLE.css">
		<link rel="stylesheet" href="/Markdown/R/markdown.css">
		<link rel="stylesheet" href="/Markdown/R/highlight.css">
		<link rel="stylesheet" href="/R/style.less">
		<link rel="stylesheet" href="/R/axicon/axicon.min.css">
	</head>
	<body>
		<script src="/__SCRIPT"></script>
		<script>
			OVERRIDE(DOM, function(origin) {
				global.DOM = CLASS({
					preset : function() {
						return origin;
					},
					init : function(inner, self, params) {
						if (self.getEl() !== undefined) {
							if (params.id !== undefined) {
								self.getEl().setAttribute('id', params.id);
							}
							if (params.cls !== undefined) {
								self.getEl().setAttribute('class', params.cls);
							}
						}
					}
				});
			});
		</script>